{"version":3,"sources":["components/Context/ParamsContext.jsx","components/Context/ColorContext.jsx","components/Connexion/Connexion.jsx","components/images/syn.png","components/Sidebar/Navbar.jsx","components/Sidebar/SidebarStyledComponent.jsx","components/Proptypes/ChildrenProptypes.jsx","components/Buttons/ButtonCancel.jsx","components/Buttons/ButtonSubmit.jsx","components/Sidebar/SlideFilter.jsx","components/Sidebar/Tri.jsx","components/Sidebar/Sidebar.jsx","components/Sidebar/NavRoute.jsx","components/Cards/Card.jsx","components/Slider/Slider.jsx","components/Sidebar/Nav.jsx","components/router/Router.jsx","App.jsx","index.jsx"],"names":["ParamsContext","createContext","ParamsContextProvider","props","useState","items","setItems","maxItems","setMaxItems","newPost","setNewPost","sorting","setSorting","process","REACT_APP_API_URL","REACT_APP_API_USER","REACT_APP_API_TOKEN","API_URL","API_USER","API_TOKEN","params","s","t","object","network","per_page","order","order_by","useEffect","axios","get","then","res","data","length","slice","catch","error","console","log","statesParams","useMemo","function","children","Provider","value","ColorContext","ColorContextProvider","unmutabledColors","txtColor","black","fk_babgroundColor","fk_hashtagColor","fk_mentionColor","fk_hashtagColor_txt","fk_mentionColor_txt","im_backgroundColor","im_hashtagColor","im_mentionColor","im_hashtagColor_txt","im_mentionColor_txt","tr_backgroundColor","tr_hashtagColor","tr_mentionColor","tr_hashtagColor_txt","tr_mentionColor_txt","defaultColors","txt","sessionStorage","getItem","im","fk","fkBackgroundNoImg","fkRegexColor","tr","trBackgroundNoImg","trRegexColor","defaultTypo","typo","activeFontFamily","setActiveFontFamily","BgColor","backgroundColor","setBackgroundColor","imRegexColor","hashtagColor","setHashtagColor","mentionColor","setMentionColor","setTxtColor","states","Alert","elevation","variant","Connexion","styledAlert","makeStyles","alertStyles","color","setUsers","jsonObj","setJsonObj","setError","getApi","onSuccess","onError","a","err","classes","open","setOpen","userName","setUserName","handleSubmit","e","preventDefault","JSON","stringify","setItem","handleClose","event","reason","connected","displayUserName","className","to","onSubmit","htmlFor","type","id","name","placeholder","onChange","target","onClick","Snackbar","autoHideDuration","onClose","severity","classeName","NavWrapper","styled","div","Navbar","toggleMenu","src","logo","alt","defaultProps","SidebarStyled","show","SidebarWrapper","CloseIcon","PropTypes","oneOfType","arrayOf","node","BtnCancel","handleClick","BtnSubmit","SlideFilter","useContext","min","max","step","Number","handleChange","Tri","post","submitedParams","prop","val","FormControl","component","RadioGroup","aria-label","defaultValue","FormControlLabel","control","Radio","label","Sidebar","setIsOpened","colors","submitedColors","background","hashtag","mention","text","font_family","submitColor","stringColors","allowZeroExpanded","handleChangeBg","hex","defaultBG","restoreBackground","handleChangeTxt","defaultTxt","restoreTxt","handleChangeHashtag","defaultHashtag","defaultMention","restoreHashtagAndMention","apiKey","nextFont","handleChangeFontFamily","family","NavRoute","isOpened","Card","match","bgBefore","media_url","retweet","originalUserName","user","contentApi","content","media","netWork","timestamp","style","dangerouslySetInnerHTML","__html","replace","highlightFacebook","highlightInstagram","avatar_url","search","Slider","activeIndex","setActiveIndex","animating","setAnimating","sortItems","sort","b","next","nextIndex","previous","goToIndex","newIndex","slides","map","CarouselItem","onExiting","onExited","session","session_id","pub_id","loader","setTimeout","Carousel","CarouselIndicators","onClickHandler","CarouselControl","direction","directionText","Nav","Routter","display","exact","path","require","config","App","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.017d8c7d.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { createContext, useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nexport const ParamsContext = createContext(null);\n\nconst ParamsContextProvider = (props) => {\n  // ---------------------------------------------------------------------------\n  // STATE CONTEXT\n  // ---------------------------------------------------------------------------\n\n  const [items, setItems] = useState([]);\n  const [maxItems, setMaxItems] = useState([]);\n  const [newPost, setNewPost] = useState(10);\n\n  // ---------------------------------------------------------------------------\n  // RADIO BUTTONS\n  // ---------------------------------------------------------------------------\n  const [sorting, setSorting] = useState('DESC');\n  // ---------------------------------------------------------------------------\n  // ---------------------------------------------------------------------------\n  // API CALL\n  // ---------------------------------------------------------------------------\n  const {\n    REACT_APP_API_URL,\n    REACT_APP_API_USER,\n    REACT_APP_API_TOKEN,\n  } = process.env;\n\n  const API_URL = `${REACT_APP_API_URL}`;\n  const API_USER = `${REACT_APP_API_USER}`;\n  const API_TOKEN = `${REACT_APP_API_TOKEN}`;\n\n  const params = {\n    s: `${API_USER}`,\n    t: `${API_TOKEN}`,\n    object: 'post',\n    network: '',\n    per_page: '50',\n    order: 'DESC',\n    order_by: 'pub_date',\n  };\n\n  const getApi = () => {\n    return axios\n      .get(`${API_URL}`, { params })\n      .then((res) => {\n        if (res.data.length > 0) {\n          // stock le retour de l'api (50 items)\n          setMaxItems(res.data);\n          // ne conserve que item * newPost ( le nombre de post du slider)\n          setItems(res.data.slice(0, newPost));\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    getApi();\n  }, []);\n\n  const statesParams = useMemo(\n    () => ({\n      function: {\n        setNewPost,\n        setItems,\n        setSorting,\n      },\n      items,\n      maxItems,\n      newPost,\n      sorting,\n    }),\n    [items, maxItems, newPost, sorting]\n  );\n\n  const { children } = props;\n\n  return (\n    <ParamsContext.Provider value={{ statesParams }}>\n      {children}\n    </ParamsContext.Provider>\n  );\n};\n\nParamsContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ParamsContextProvider;\n","import React, { createContext, useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ColorContext = createContext(null);\n\nconst ColorContextProvider = (props) => {\n  // ---------------------------------------------------------------------------\n  // callback function pour les fonctions restore ( boutons annuler )\n  // dans sidebar.jsx à partir de la ligne 123\n  // ---------------------------------------------------------------------------\n  const unmutabledColors = {\n    txtColor: '#fff',\n    black: '#000',\n    // facebook default colors\n    fk_babgroundColor: '#4267b2',\n    fk_hashtagColor: '#4267b2',\n    fk_mentionColor: '#4267b2',\n    // facebook hashtag et mention sans image\n    fk_hashtagColor_txt: '#000',\n    fk_mentionColor_txt: '#000',\n    // instagram default colors\n    im_backgroundColor: '#e1306c',\n    im_hashtagColor: '#e1306c',\n    im_mentionColor: '#e1306c',\n    // instagram hashtag et mention sans image\n    im_hashtagColor_txt: '#000',\n    im_mentionColor_txt: '#000',\n    // twitter default colors\n    tr_backgroundColor: '#1da1f2',\n    tr_hashtagColor: '#1da1f2',\n    tr_mentionColor: '#1da1f2',\n    // twitter hashtag et mention sans image\n    tr_hashtagColor_txt: '#000',\n    tr_mentionColor_txt: '#000',\n  };\n\n  const defaultColors = {\n    txt: sessionStorage.getItem('text') || '#fff',\n    black: sessionStorage.getItem('mention') || '#000',\n    im: sessionStorage.getItem('mention') || '#e1306c',\n    fk: sessionStorage.getItem('mention') || '#4267b2',\n    fkBackgroundNoImg: sessionStorage.getItem('background') || '#4267b2',\n    fkRegexColor: sessionStorage.getItem('hashtag') || '#4267b2',\n    tr: sessionStorage.getItem('mention') || '#1da1f2',\n    trBackgroundNoImg: sessionStorage.getItem('background') || '#1da1f2',\n    trRegexColor: sessionStorage.getItem('hashtag') || '#1da1f2',\n  };\n\n  const defaultTypo = {\n    typo: sessionStorage.getItem('font_family') || 'Arial',\n  };\n\n  const [activeFontFamily, setActiveFontFamily] = useState(defaultTypo.typo);\n\n  const BgColor =\n    defaultColors.trBackgroundNoImg || defaultColors.fkBackgroundNoImg;\n  const [backgroundColor, setBackgroundColor] = useState(BgColor);\n\n  const [hashtagColor, setHashtagColor] = useState(\n    defaultColors.fkRegexColor &&\n      defaultColors.imRegexColor &&\n      defaultColors.trRegexColor\n  );\n  const [mentionColor, setMentionColor] = useState(\n    defaultColors.imRegexColor &&\n      defaultColors.fkRegexColor &&\n      defaultColors.trRegexColor\n  );\n\n  const [txtColor, setTxtColor] = useState(defaultColors.txt);\n\n  const states = useMemo(\n    () => ({\n      function: {\n        setActiveFontFamily,\n        setBackgroundColor,\n        setHashtagColor,\n        setMentionColor,\n        setTxtColor,\n      },\n      activeFontFamily,\n      backgroundColor,\n      mentionColor,\n      hashtagColor,\n      txtColor,\n      unmutabledColors,\n    }),\n    [\n      activeFontFamily,\n      backgroundColor,\n      mentionColor,\n      hashtagColor,\n      txtColor,\n      unmutabledColors,\n    ]\n  );\n\n  const { children } = props;\n\n  return (\n    <ColorContext.Provider value={{ states }}>{children}</ColorContext.Provider>\n  );\n};\n\nColorContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ColorContextProvider;\n","/* eslint-disable react/prop-types */\n/* eslint-disable indent */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/jsx-no-undef */\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport BtnConnexion from '../Buttons/BtnConnexion';\nimport FormSettings from './FormSettings';\n// import PropTypes from 'prop-types';\nimport './Connexion.css';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Connexion = (props) => {\n  const styledAlert = makeStyles({\n    alertStyles: {\n      backgroundColor: '#f44336',\n      color: 'white',\n    },\n  });\n\n  const [users, setUsers] = useState([]);\n  const [jsonObj, setJsonObj] = useState({});\n  const [error, setError] = useState(null);\n\n  const {\n    REACT_APP_API_URL,\n    REACT_APP_API_USER,\n    REACT_APP_API_TOKEN,\n  } = process.env;\n\n  const API_URL = `${REACT_APP_API_URL}`;\n  const API_USER = `${REACT_APP_API_USER}`;\n  const API_TOKEN = `${REACT_APP_API_TOKEN}`;\n\n  // https://slideyour.net/thomas3 ou https://slideyour.net/test-connexion etc...\n\n  const params = {\n    s: `${API_USER}`,\n    t: `${API_TOKEN}`,\n    object: 'user',\n    // le point de l' Api n'existe pas\n    // session-name\n    // session-token\n  };\n\n  const url = 'http://slideyour.net/api.php';\n\n  const getApi = async (onSuccess, onError) => {\n    await axios.get(`${API_URL}`, { params }).then(\n      (res) => {\n        setUsers(res.data);\n      },\n      (err) => {\n        setError(err);\n      }\n    );\n  };\n\n  useEffect(() => {\n    getApi();\n  }, []);\n\n  // log l' utlisateur de USERS\n  // si oui\n  // context user\n  // si il coche on l' enregistre dans sessionStorage\n\n  const classes = styledAlert();\n\n  // SOIT faire un appel d' API pour le USER mais sans le TOKEN\n\n  // SOIT faire un appel d' API pour les 2 pour changer les params\n\n  const defaultUserName = {\n    userName: sessionStorage.getItem('username') || '',\n  };\n  const [open, setOpen] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [userNameToken, setUserNameToken] = useState('');\n  const [token, setToken] = useState('');\n  const [jsonObjToken, setJsonObjToken] = useState({});\n\n  // ça donne [Object] [object] si je mets defaultUserName ?\n  const handleChange = (e) => {\n    setUserName(e.target.value);\n  };\n\n  const handleChangeUserToken = (e) => {\n    setUserNameToken(e.target.value);\n  };\n\n  const handleChangeToken = (e) => {\n    setToken(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    // console.log(`Bienvenue ${userName}`);\n    e.preventDefault();\n    setUserName('');\n    const jsonUsername = JSON.stringify(jsonObj);\n  };\n\n  // const displayUserName = () => {\n  //   if (handleSubmit) {\n  //     return userName;\n  //   }\n  // };\n\n  const handleSubmitToken = (e) => {\n    // console.log(`Bienvenue ${userNameToken}`);\n    e.preventDefault();\n    setUserNameToken('');\n    setToken('');\n    const jsonUsername = JSON.stringify(jsonObjToken);\n  };\n\n  // stocker que si c'est bon\n  useEffect(() => {\n    sessionStorage.setItem('username', API_USER);\n    setJsonObj({\n      userName,\n    });\n  }, [userName]);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleCloseToken = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const { displayUserName } = props;\n\n  const Token = token === API_TOKEN;\n  const connected = userName === API_USER;\n  const connectedWithToken = connected && Token;\n\n  // celui marche mais avec n' importe quel username\n  // donc NON\n  // const connectedWithToken = {connected, Token};\n\n  return (\n    <div className=\"connexion\">\n      <div className=\"acceuil\">\n        <h1 className=\"h1Connexion\">Slide Your Net</h1>\n        <h2 className=\"h2Connexion\">\n          Une application pour retrouver vos publications favorites\n        </h2>\n        <h3 className=\"h3Connexion\">\n          <span>Facebook</span> - <span>Instagram</span> -<span>Twitter</span>\n        </h3>\n        <div className=\"formulaire\">\n          {connected ? (\n            <div>\n              Bienvenue\n              <Link to=\"/networks\"> {userName}</Link>\n            </div>\n          ) : null}\n\n          <form onSubmit={handleSubmit}>\n            <span>Pour voir les publications entrez le nom thomas3</span>\n            <label htmlFor=\"inputidentifiant\" className=\"label\">\n              Entrez votre nom\n              <input\n                className=\"inputConnexion\"\n                type=\"text\"\n                id=\"inputIdentifiant\"\n                name=\"inputMail\"\n                placeholder=\"John Doe\"\n                value={userName}\n                onChange={handleChange}\n              />\n            </label>\n\n            <div>\n              {/* //  user est loggé ou pas  */}\n\n              {connected ? (\n                <Link to=\"/networks\">\n                  <input\n                    type=\"submit\"\n                    value=\"connexion\"\n                    className=\"inputSubmit\"\n                    onSubmit={handleSubmit}\n                    // renvoyer l' user sur cette URL\n                    // https://admin.slideyour.net/admin/index.php?s=thomas3&t=8845c9cd48230070ac72191467ac1690\n                  />\n                </Link>\n              ) : (\n                <>\n                  <input\n                    type=\"submit\"\n                    value=\"connexion\"\n                    onClick={handleClick}\n                  />\n                  <Snackbar\n                    open={open}\n                    autoHideDuration={4000}\n                    onClose={handleClose}\n                  >\n                    <Alert\n                      severity=\"error\"\n                      onClose={handleClose}\n                      classeName={classes.alertStyles}\n                    >\n                      Ce champ doit être rempli !\n                    </Alert>\n                  </Snackbar>\n                </>\n              )}\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Connexion.propTypes = { };\nexport default Connexion;\n","export default __webpack_public_path__ + \"static/media/syn.8052fb43.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport logo from '../images/syn.png';\n\nconst NavWrapper = styled.div`\n  width: 100%;\n  height: 7vh;\n  background: #f7f7f7;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-align: right;\n\n  .logo {\n    display: flex;\n    width: 35px;\n    height: 35px;\n    margin-left: 30px;\n    border-radius: 50%;\n  }\n`;\n\nconst Navbar = ({ toggleMenu }) => {\n  return (\n    <NavWrapper>\n      <Link to=\"/\">\n        <img className=\"logo\" src={logo} alt=\"\" />\n      </Link>\n\n      <button\n        className=\"btn-sidebar btn btn-default\"\n        type=\"button\"\n        onClick={() => toggleMenu(true)}\n      >\n        <i className=\"fa fa-cog fa-2x\" />\n      </button>\n    </NavWrapper>\n  );\n};\n\nexport default Navbar;\n\nNavbar.propTypes = {\n  toggleMenu: PropTypes.func,\n};\n\nNavbar.defaultProps = {\n  toggleMenu: 'undefined',\n};\n","import styled from 'styled-components';\n\nconst SidebarStyled = styled.div`\n  position: fixed;\n  z-index: 555;\n  top: 0;\n  left: 0;\n  background-color: #f7f7f7;\n  padding: 1rem;\n  color: var(--dark);\n  max-width: 340px;\n  height: 100%;\n  transform: translateX(${(props) => (props.show ? '0' : '-100%')});\n  transition: all 0.3s ease-in-out;\n  overflow-x: hidden;\n`;\n\nconst SidebarWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  cursor: pointer;\n  padding: 10px 35px 16px 0px;\n\n  & span,\n  & span:before,\n  & span:after {\n    cursor: pointer;\n    border-radius: 1px;\n    height: 3px;\n    width: 30px;\n    background: var(--dark);\n    position: absolute;\n    display: block;\n    content: '';\n  }\n\n  & span {\n    background-color: transparent;\n  }\n\n  & span:before {\n    top: 0;\n    transform: rotate(45deg);\n  }\n\n  & span:after {\n    top: 0;\n    transform: rotate(-45deg);\n  }\n`;\n\nexport { CloseIcon, SidebarStyled, SidebarWrapper };\n","import PropTypes from 'prop-types';\n\nconst childrenPropType = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default childrenPropType;\n","import React from 'react';\nimport '../Cards/Card_css/CardProfile.css';\nimport childrenPropType from '../Proptypes/ChildrenProptypes';\n\nfunction BtnCancel(props) {\n  const { handleClick } = props;\n  return (\n    <>\n      <button id=\"btn\" className=\"cancel\" type=\"submit\" onClick={handleClick}>\n        Annuler\n      </button>\n    </>\n  );\n}\n\nexport default BtnCancel;\n\nBtnCancel.propTypes = childrenPropType;\n","import React from 'react';\nimport '../Cards/Card_css/CardProfile.css';\nimport childrenPropType from '../Proptypes/ChildrenProptypes';\n\nfunction BtnSubmit(props) {\n  const { handleClick } = props;\n  return (\n    <>\n      <button id=\"btn\" className=\"submit\" type=\"submit\" onClick={handleClick}>\n        Valider\n      </button>\n    </>\n  );\n}\n\nexport default BtnSubmit;\n\nBtnSubmit.propTypes = childrenPropType;\n","import React, { useState, useContext } from 'react';\nimport { ParamsContext } from '../Context/ParamsContext';\n// import PropTypes from 'prop-types';\nimport './Sidebar.css';\n\nexport default function SlideFilter() {\n  const { statesParams } = useContext(ParamsContext);\n  const [newPost, setNewPost] = useState(statesParams.newPost);\n\n  const handleChange = (e) => {\n    setNewPost(Number(e.target.value));\n    statesParams.function.setNewPost(e.target.value);\n    sessionStorage.setItem('post', e.target.value);\n  };\n\n  const renderSlider = () => {\n    return (\n      <div className=\"post-filter\">\n        <div className=\"label-slider\">\n          <div>Nombre de post {newPost}</div>\n        </div>\n        <input\n          type=\"range\"\n          min={1}\n          max={50}\n          step={1}\n          value={newPost}\n          className=\"slideFilter\"\n          onChange={(e) => handleChange(e)}\n        />\n      </div>\n    );\n  };\n\n  // Return de la fonction principale ->\n  return <div>{newPost ? renderSlider() : 'loading'}</div>;\n}\n\n// SlideFilter.propTypes = {\n// };\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AccordionItemPanel } from 'react-accessible-accordion';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport PropTypes from 'prop-types';\nimport { ParamsContext } from '../Context/ParamsContext';\nimport BtnSubmit from '../Buttons/ButtonSubmit';\nimport BtnCancel from '../Buttons/ButtonCancel';\nimport SlideFilter from './SlideFilter';\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './Sidebar.css';\n\nconst Tri = (post, params) => {\n  const { statesParams } = useContext(ParamsContext);\n\n  const [newPost, setNewPost] = useState(10);\n  const [sorting] = useState(statesParams.sorting);\n  const [jsonObj, setJsonObj] = useState();\n\n  const handleChange = (e) => {\n    statesParams.function.setSorting(e.target.value);\n  };\n\n  const submitedParams = params || {\n    order: sorting,\n    post: newPost,\n  };\n\n  const stringify = () => {\n    return JSON.stringify(params);\n  };\n\n  const submitParams = () => {\n    const stringParams = stringify({\n      order: sorting,\n      post: newPost,\n    });\n    setJsonObj(stringParams);\n    console.log(stringParams);\n  };\n\n  useEffect(() => {\n    sessionStorage.setItem('post', newPost);\n    sessionStorage.setItem('order', sorting);\n    setJsonObj(\n      JSON.stringify(\n        submitedParams,\n        (prop, val) => {\n          return val;\n        },\n        3\n      )\n    );\n    // console.log('mise à jour params', jsonObj);\n  }, [jsonObj, newPost, sorting]);\n\n  // ---------------------------------------------------------------------------\n  // fonction restore slider et ordre DESC au bouton annuler\n  // ---------------------------------------------------------------------------\n\n  // const restoreDefaultPost = () => {\n  //   setNewPost(10);\n  //   sessionStorage.setItem('post', 10);\n  // };\n\n  return (\n    <AccordionItemPanel>\n      <div className=\"sidebar-category\">\n        {/* Le Slider pour modifier le nombre de posts */}\n        <div className=\"dropdown\">\n          <SlideFilter value={post} />\n        </div>\n\n        {/* //\n              ---------------------------------------------------------------------------\n            // par défault c'est déjà par ordre de publication et décroissant DESC ! //\n              ---------------------------------------------------------------------------\n        */}\n        <FormControl component=\"fieldset\">\n          <RadioGroup\n            aria-label=\"tri des posts\"\n            name=\"new_order_by\"\n            defaultValue=\"DESC\"\n            onChange={(e) => handleChange(e)}\n          >\n            <FormControlLabel\n              value=\"ASC\"\n              control={<Radio />}\n              className=\"radioButton\"\n              label=\"Tri par ordre croissant\"\n            />\n\n            <FormControlLabel\n              value=\"DESC\"\n              control={<Radio />}\n              className=\"radioButton\"\n              label=\"Tri par ordre décroissant\"\n            />\n          </RadioGroup>\n\n          {/* <div className=\"triBtn\">\n            <BtnCancel handleClick={() => restoreDefaultPost()} />\n            <BtnSubmit handleClick={() => submitParams()} />\n          </div> */}\n        </FormControl>\n      </div>\n    </AccordionItemPanel>\n  );\n};\n\nTri.propTypes = {\n  post: PropTypes.shape({\n    aria: PropTypes.string,\n    name: PropTypes.string,\n    selected: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n  }),\n};\n\nTri.defaultProps = {\n  post: {},\n};\n\nexport default Tri;\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\nimport React, { useState, useEffect, useContext } from 'react';\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from 'react-accessible-accordion';\nimport { SketchPicker } from 'react-color';\nimport FontPicker from 'font-picker-react';\nimport PropTypes from 'prop-types';\nimport {\n  CloseIcon,\n  SidebarStyled,\n  SidebarWrapper,\n} from './SidebarStyledComponent';\nimport { ColorContext } from '../Context/ColorContext';\nimport BtnCancel from '../Buttons/ButtonCancel';\nimport BtnSubmit from '../Buttons/ButtonSubmit';\nimport Tri from './Tri';\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './Sidebar.css';\n\nconst Sidebar = ({ show, setIsOpened, colors }) => {\n  const { states } = useContext(ColorContext);\n\n  const [activeFontFamily, setActiveFontFamily] = useState(\n    states.activeFontFamily\n  );\n  const [backgroundColor, setBackgroundColor] = useState(\n    states.backgroundColor\n  );\n  const [hashtagColor, setHashtagColor] = useState(states.hashtagColor);\n  const [mentionColor, setMentionColor] = useState(states.mentionColor);\n  const [txtColor, setTxtColor] = useState(states.setTxtColor);\n  const [jsonObj, setJsonObj] = useState({});\n\n  const submitedColors = colors || {\n    background: backgroundColor,\n    hashtag: hashtagColor,\n    mention: mentionColor,\n    text: txtColor,\n    font_family: activeFontFamily,\n  };\n\n  const stringify = () => {\n    return JSON.stringify(colors);\n  };\n\n  const submitColor = () => {\n    const stringColors = stringify({\n      background: backgroundColor,\n      hashtag: hashtagColor,\n      mention: mentionColor,\n      text: txtColor,\n      font_family: activeFontFamily,\n    });\n    setJsonObj(stringColors);\n  };\n\n  useEffect(() => {\n    sessionStorage.setItem('font_family', activeFontFamily);\n    sessionStorage.setItem('background', backgroundColor);\n    sessionStorage.setItem('hashtag', hashtagColor);\n    sessionStorage.setItem('mention', mentionColor);\n    sessionStorage.setItem('text', txtColor);\n    setJsonObj(\n      JSON.stringify(\n        submitedColors,\n        (prop, val) => {\n          return val;\n        },\n        3\n      )\n    );\n\n    // console.log('mise à jour', jsonObj);\n  }, [\n    activeFontFamily,\n    backgroundColor,\n    hashtagColor,\n    mentionColor,\n    txtColor,\n    jsonObj,\n  ]);\n\n  const handleChangeBg = (color) => {\n    states.function.setBackgroundColor(color);\n    setBackgroundColor(color);\n  };\n\n  const handleChangeTxt = (color) => {\n    states.function.setTxtColor(color);\n    setTxtColor(color);\n  };\n\n  const handleChangeHashtag = (color) => {\n    states.function.setHashtagColor(color);\n    states.function.setMentionColor(color);\n    setHashtagColor(color);\n    setMentionColor(color);\n  };\n\n  const handleChangeFontFamily = (nextFont) => {\n    setActiveFontFamily(nextFont);\n    states.function.setActiveFontFamily(nextFont);\n    sessionStorage.setItem('font_family', nextFont);\n  };\n\n  const restoreFontFamily = () => {\n    setActiveFontFamily('Arial');\n    sessionStorage.setItem('font_family', 'Arial');\n  };\n\n  const restoreTxt = () => {\n    const defaultTxt = states.unmutabledColors.txtColor;\n    setTxtColor(defaultTxt);\n    states.function.setTxtColor(defaultTxt);\n    submitColor({\n      text: txtColor,\n    });\n  };\n\n  const restoreHashtagAndMention = () => {\n    // ---------------------------------------------------------------------------\n    // il faudra réussir à appeler selon le cas des valeurs préfixées\n    // dans colorContext ligne 11\n    //\n    // unmutabledColors[`${currentSocialNetwork}_txt`]\n    // ou currentSocialNetwork serait égale à tw_ pour twitter par exemple\n    // if twitter -> unmutabledColors[${currentSocialNetwork}_txt]\n    // ---------------------------------------------------------------------------\n    const defaultHashtag = states.unmutabledColors.black;\n    const defaultMention = states.unmutabledColors.black;\n    setHashtagColor(defaultHashtag);\n    setMentionColor(defaultMention);\n    states.function.setHashtagColor(defaultHashtag);\n    states.function.setMentionColor(defaultMention);\n    submitColor({\n      hashtag: hashtagColor,\n      mention: mentionColor,\n    });\n  };\n\n  const restoreBackground = () => {\n    const defaultBG = states.unmutabledColors.tr_backgroundColor;\n    setBackgroundColor(defaultBG);\n    states.function.setBackgroundColor(defaultBG);\n    submitColor({\n      background: defaultBG,\n    });\n  };\n\n  return (\n    <SidebarStyled show={show ? 1 : 0}>\n      <SidebarWrapper>\n        <CloseIcon\n          onClick={() => {\n            setIsOpened(false);\n          }}\n        >\n          <span />\n        </CloseIcon>\n        <div className=\"sidebar-category\">\n          <span>Couleurs et Typographie</span>\n          <Accordion allowZeroExpanded>\n            <AccordionItem key=\"\">\n              <AccordionItemHeading>\n                <AccordionItemButton>\n                  changer la couleur du Background\n                </AccordionItemButton>\n              </AccordionItemHeading>\n              <AccordionItemPanel>\n                <SketchPicker\n                  color={backgroundColor}\n                  onChange={(color) => handleChangeBg(color.hex)}\n                  className=\"sketch-picker\"\n                />\n                <BtnCancel handleClick={() => restoreBackground()} />\n                <BtnSubmit handleClick={() => submitColor()} />\n              </AccordionItemPanel>\n            </AccordionItem>\n          </Accordion>\n          <Accordion allowZeroExpanded>\n            <AccordionItem key=\"\">\n              <AccordionItemHeading>\n                <AccordionItemButton>\n                  changer la couleur du Texte\n                </AccordionItemButton>\n              </AccordionItemHeading>\n              <AccordionItemPanel>\n                <SketchPicker\n                  color={txtColor}\n                  onChange={(color) => handleChangeTxt(color.hex)}\n                  className=\"sketch-picker\"\n                />\n                <BtnCancel handleClick={() => restoreTxt()} />\n                <BtnSubmit handleClick={() => submitColor()} />\n              </AccordionItemPanel>\n            </AccordionItem>\n          </Accordion>\n          <Accordion allowZeroExpanded>\n            <AccordionItem key=\"\">\n              <AccordionItemHeading>\n                <AccordionItemButton>\n                  changer la couleur des # et @\n                </AccordionItemButton>\n              </AccordionItemHeading>\n              <AccordionItemPanel>\n                <SketchPicker\n                  color={(hashtagColor, mentionColor)}\n                  onChange={(color) => handleChangeHashtag(color.hex)}\n                  className=\"sketch-picker\"\n                />\n                <BtnCancel handleClick={() => restoreHashtagAndMention()} />\n                <BtnSubmit handleClick={() => submitColor()} />\n              </AccordionItemPanel>\n            </AccordionItem>\n          </Accordion>\n          <Accordion allowZeroExpanded>\n            <AccordionItem key=\"\">\n              <AccordionItemHeading>\n                <AccordionItemButton>\n                  changer la Typographie\n                </AccordionItemButton>\n              </AccordionItemHeading>\n              <AccordionItemPanel>\n                <FontPicker\n                  apiKey=\"AIzaSyBqmdg2e_R-b0vz6xutdlonOrfWUuQ0Tas\"\n                  activeFontFamily={activeFontFamily}\n                  onChange={(nextFont) =>\n                    handleChangeFontFamily(nextFont.family)\n                  }\n                  className=\"typo\"\n                />\n                <BtnCancel handleClick={() => restoreFontFamily()} />\n                <BtnSubmit handleClick={() => submitColor()} />\n              </AccordionItemPanel>\n            </AccordionItem>\n          </Accordion>\n        </div>\n        {/*  ************** SLIDE FILTER + TRI par ordre ASC ou DESC  ************** */}\n        <div className=\"sidebar-category\">\n          {/* <span>Tri et nombre de posts</span> */}\n          <Accordion allowZeroExpanded>\n            <AccordionItem>\n              <AccordionItemHeading>\n                <AccordionItemButton>\n                  <span>Tri et nombre de posts</span>\n                </AccordionItemButton>\n              </AccordionItemHeading>\n              <Tri />\n            </AccordionItem>\n          </Accordion>\n        </div>\n        {/* ********************************************* */}\n      </SidebarWrapper>\n    </SidebarStyled>\n  );\n};\n\nexport default Sidebar;\n\nSidebar.propTypes = {\n  show: PropTypes.bool.isRequired,\n  setIsOpened: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport Sidebar from './Sidebar';\n\nexport default function NavRoute() {\n  const [isOpened, setIsOpened] = useState(false);\n  return (\n    <>\n      <Navbar toggleMenu={setIsOpened} />\n      <Sidebar show={isOpened} setIsOpened={setIsOpened} />\n    </>\n  );\n}\n","/* eslint-disable react/prop-types */\n/* eslint-disable indent */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\n/* eslint-disable react/no-danger */\nimport React, { useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './Card_css/CardFacebook.css';\nimport './Card_css/CardInsta.css';\nimport './Card_css/Card.css';\nimport { ColorContext } from '../Context/ColorContext';\n\nexport default function Card({ post }) {\n  const { states } = useContext(ColorContext);\n\n  const [activeFontFamily, setActiveFontFamily] = useState(\n    states.activeFontFamily || sessionStorage.getItem('font_family')\n  );\n\n  const [backgroundColor, setBackgroundColor] = useState(\n    states.backgroundColor || sessionStorage.getItem('background')\n  );\n  const [hashtagColor, setHashtagColor] = useState(\n    states.hashtagColor || sessionStorage.getItem('hashtag')\n  );\n  const [mentionColor, setMentionColor] = useState(\n    states.mentionColor || sessionStorage.getItem('mention')\n  );\n  const [txtColor, setTxtColor] = useState(\n    states.txtColor || sessionStorage.getItem('text')\n  );\n\n  const bg = `url(${post.media_url})`;\n  const bgBefore = {\n    '--before': bg,\n  };\n\n  const mention = /[@]\\w+/g;\n  const hashtag = /[#]\\w+/g;\n  const retweet = /(RT @)\\w+:/g;\n  let originalUserName = post.user.name;\n  const contentApi = post.content;\n  const media = post.media_url;\n  const netWork = post.network;\n  const getInstagram = post.timestamp;\n\n  function highlight(match) {\n    return match\n      .replace(retweet, (txt) => {\n        originalUserName = txt;\n        return `<span class=\"txtRetweet\">${txt}</span>`;\n      })\n      .replace(hashtag, (txt) => {\n        return `<span class=\"txtHashtag\" style=\"color:${hashtagColor}\">${txt}</span>`;\n      })\n      .replace(mention, (txt) => {\n        return `<span class=\"txtMention\" style=\"color:${mentionColor}\">${txt}</span>`;\n      });\n  }\n\n  function highlightFacebook(match) {\n    return match.replace(hashtag, (txt) => {\n      return `<span class=\"txtSpanWithImgFk\" style=\"color:${hashtagColor}\">${txt}</span>`;\n    });\n  }\n\n  function highlightInstagram(match) {\n    return match\n      .replace(hashtag, (txt) => {\n        return `<span class=\"txtSpanWithImgInst\" style=\"color:${hashtagColor}\">${txt}</span>`;\n      })\n      .replace(mention, (txt) => {\n        return `<span class=\"txtSpanWithImgInst\" style=\"color:${mentionColor}\">${txt}</span>`;\n      });\n  }\n\n  useEffect(() => {\n    setActiveFontFamily(states.activeFontFamily);\n    setBackgroundColor(states.backgroundColor);\n    setHashtagColor(states.hashtagColor);\n    setMentionColor(states.mentionColor);\n    setTxtColor(states.txtColor);\n  }, [\n    states.activeFontFamily,\n    states.backgroundColor,\n    states.hashtagColor,\n    states.mentionColor,\n    states.txtColor,\n  ]);\n\n  return (\n    <>\n      <div\n        className={\n          media\n            ? 'cardWithImg'\n            : netWork === 'facebook'\n            ? 'cardFk'\n            : netWork === 'instagram'\n            ? 'cardInsta'\n            : media\n            ? 'cardWithImg'\n            : 'cardTr'\n        }\n        style={media ? bgBefore : { backgroundColor }}\n      >\n        <div className={post.media_url ? 'cardBodyWithImg' : 'cardBodyNoImg'}>\n          <div className={post.media_url ? 'content' : 'contentNoImg'}>\n            <div className=\"apply-font\">\n              <div\n                dangerouslySetInnerHTML={{\n                  __html:\n                    netWork === 'twitter'\n                      ? highlight(contentApi)\n                      : netWork === 'facebook'\n                      ? highlightFacebook(contentApi)\n                      : netWork === 'instagram'\n                      ? highlightInstagram(contentApi)\n                      : null,\n                }}\n                style={{ color: txtColor }}\n              />\n            </div>\n          </div>\n          <div className=\"cardImg\">\n            <div className={post.media_url ? 'getImg' : 'hideImg'}>\n              <img src={post.media_url} alt={post.media_url} />\n            </div>\n          </div>\n        </div>\n        <div className=\"userCard\">\n          <img\n            className=\"logoUser\"\n            src={post.user.avatar_url}\n            alt={post.user.name}\n          />\n\n          <h3 className=\"reTweet\">\n            <div\n              dangerouslySetInnerHTML={{\n                __html: originalUserName,\n              }}\n            />\n          </h3>\n        </div>\n        <div className=\"footerCard\">\n          <h3 className=\"hashtag\">{post.user.name}</h3>\n          <img\n            className=\"logoUser\"\n            src={post.user.avatar_url}\n            alt={post.search}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nCard.propTypes = {\n  post: PropTypes.shape({\n    content: PropTypes.string,\n    media_url: PropTypes.string,\n    network: PropTypes.string,\n    search: PropTypes.string,\n  }),\n  user: PropTypes.shape({\n    avatar_url: PropTypes.string,\n    name: PropTypes.string,\n  }),\n};\n\nCard.defaultProps = {\n  post: {},\n  user: {},\n};\n","/* eslint-disable indent */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable no-use-before-define */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\nimport React, { useState, useEffect, useContext } from 'react';\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n} from 'reactstrap';\nimport { ParamsContext } from '../Context/ParamsContext';\nimport Card from '../Cards/Card';\nimport './Slider.css';\n\nconst Slider = () => {\n  const { statesParams } = useContext(ParamsContext);\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n  const [items, setItems] = useState(statesParams.items);\n  const [newPost, setNewPost] = useState(statesParams.newPost);\n\n  useEffect(() => {\n    if (items && items.length > 0) {\n      setItems(sortItems(items));\n      setActiveIndex(0);\n    }\n  }, [statesParams.sorting]);\n\n  useEffect(() => {\n    if (statesParams.items.length > 0 && statesParams.maxItems.length > 0) {\n      setItems(statesParams.maxItems.slice(0, statesParams.newPost));\n    }\n  }, [statesParams.items, statesParams.newPost]);\n\n  const sortItems = () => {\n    return items.sort((a, b) => {\n      switch (statesParams.sorting) {\n        case 'ASC':\n          return a.timestamp - b.timestamp;\n        case 'DESC':\n          return b.timestamp - a.timestamp;\n        default:\n          return a.timestamp - b.timestamp;\n      }\n    });\n  };\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n  const slides = items.map((post) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={post.pub_id}\n        post={post}\n      >\n        <Card key={post.pub_id} post={post} session={post.session_id} />\n      </CarouselItem>\n    );\n  });\n\n  const renderCarousel = () => {\n    if (items && items.length > 0) {\n      return (\n        <Carousel activeIndex={activeIndex} next={next} previous={previous}>\n          <CarouselIndicators\n            items={items}\n            activeIndex={activeIndex}\n            onClickHandler={goToIndex}\n          />\n          {slides}\n          <CarouselControl\n            direction=\"prev\"\n            directionText=\"Previous\"\n            onClickHandler={previous}\n          />\n          <CarouselControl\n            direction=\"next\"\n            directionText=\"Next\"\n            onClickHandler={next}\n          />\n        </Carousel>\n      );\n    }\n\n    return 'Loading ...';\n  };\n\n  // function refresh() {\n  //   window.history.go(0);\n  // }\n\n  const loader = () => {\n    return (\n      // ---------------------------------------------------------------------------\n      // bouton refresh seulement utile si problème de cross origin en Développement\n      // ---------------------------------------------------------------------------\n\n      // <div className=\"loader-container\">\n      //   Loading, Refresh the Page !\n      //   <Link to=\"/networks\">\n      //     <button\n      //       type=\"button\"\n      //       value=\"Rafraîchir la page\"\n      //       onClick={() => refresh()}\n      //     >\n      //       refresh\n      //     </button>\n      //   </Link>\n      // </div>\n\n      <div className=\"loader\" />\n    );\n  };\n\n  setTimeout(loader, 100);\n\n  // Return de la function principale\n  // Si on a items et que c'est bien un array avec au moins un item\n  // il faudrait un useEffect car si items est vide === 'loading ligne 110\"\n  return items && items.length > 0 ? renderCarousel() : loader();\n};\n\nexport default Slider;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport logo from '../images/syn.png';\n\nconst NavWrapper = styled.div`\n  width: 100%;\n  height: 7vh;\n  background: #f7f7f7;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-align: right;\n\n  .logo {\n    display: flex;\n    width: 35px;\n    height: 35px;\n    margin-left: 30px;\n    border-radius: 50%;\n  }\n`;\n\nconst Nav = () => {\n  return (\n    <NavWrapper>\n      <Link to=\"/\">\n        <img className=\"logo\" src={logo} alt=\"\" />\n      </Link>\n    </NavWrapper>\n  );\n};\n\nexport default Nav;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ParamsContextProvider from '../Context/ParamsContext';\nimport ColorContextProvider from '../Context/ColorContext';\nimport Connexion from '../Connexion/Connexion';\nimport NavRoute from '../Sidebar/NavRoute';\nimport Slider from '../Slider/Slider';\nimport Nav from '../Sidebar/Nav';\n\nexport default function Routter(props) {\n  const [display] = useState(false);\n  function displayNav() {\n    if (props) {\n      return <Nav />;\n    }\n    // else 'username + token'\n    return <NavRoute />;\n  }\n\n  return (\n    <Router>\n      <ColorContextProvider>\n        {display ? (\n          displayNav()\n        ) : (\n          <Switch>\n            <Route exact path=\"/\" component={Connexion} />\n            <ParamsContextProvider>\n              <NavRoute />\n              <Route path=\"/networks/\" component={Slider} />\n            </ParamsContextProvider>\n          </Switch>\n        )}\n      </ColorContextProvider>\n    </Router>\n  );\n}\n","import React from 'react';\nimport Routter from './components/router/Router';\nimport './App.css';\n\nrequire('dotenv').config();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-fragments\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}